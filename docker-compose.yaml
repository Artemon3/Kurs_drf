version: '3'
services:
  db:
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./data:/var/lib/postgresql/db_data
    env_file:
      - .env
    ports:
      - '5438:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U{DB_USER} -d{DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    container_name: back
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    ports:
      - "8001:8000"

#  db:
#    image: postgres
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=postgres
#    volumes:
#      - db_data:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    ports:
#    - '5404:5432'
  redis:
    container_name: redisk
    image: redis:latest
    ports:
      - "6380:6379"

  celery:
    container_name: celer
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: "celery -A config worker -l INFO"

volumes:
  db_data: